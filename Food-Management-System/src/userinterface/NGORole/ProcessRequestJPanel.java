/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NGORole;

import Business.Employee.EmployeeDirectory;
import Business.Enterprise.Enterprise;
import Business.Organization.DeliveryOrganization;
import Business.Organization.HomelessShelterManagerOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sumedhtelang
 */
public class ProcessRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessRequestJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private WorkRequest request;
    private EmployeeDirectory empDirectory;
    private HomelessShelterManagerOrganization homelessShelterManagerOrganization;
    private Organization org;
    private Enterprise enterprise;
    private OrganizationDirectory organizationDirectory;
    
    public ProcessRequestJPanel(JPanel userProcessContainer, WorkRequest request, Organization org, Enterprise enterprise) {
        initComponents();
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.org = org;
        this.enterprise = enterprise;
        populateCombo();
        ArrayList<UserAccount> u = org.getUserAccountDirectory().getUserAccountList();
    }
    
    private void populateCombo() {
        assignComboBox.removeAllItems();
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equalsIgnoreCase("Delivery Organization")) {
                for (UserAccount user : org.getUserAccountDirectory().getUserAccountList()) {

                    assignComboBox.addItem(user);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        decisionComboBox = new javax.swing.JComboBox<>();
        deliveryComboBox = new javax.swing.JComboBox<>();
        assignComboBox = new javax.swing.JComboBox<>();
        submitBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Decision :");

        jLabel2.setText("Delivery Option :");

        jLabel3.setText("Assign To :");

        decisionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Confirm", "Reject" }));
        decisionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decisionComboBoxActionPerformed(evt);
            }
        });

        deliveryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delivery" }));
        deliveryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryComboBoxActionPerformed(evt);
            }
        });

        assignComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        submitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-submit-document-32.png"))); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-back-arrow-26.png"))); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Delivery Request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(decisionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deliveryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(assignComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(submitBtn)))
                .addContainerGap(732, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backBtn)
                    .addComponent(jLabel4))
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decisionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(deliveryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(assignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(submitBtn)
                .addContainerGap(167, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        try{
        String txtValue = decisionComboBox.getSelectedItem().toString();
        request.setDecision(txtValue);
        UserAccount user = (UserAccount) assignComboBox.getSelectedItem();

        if (txtValue.equalsIgnoreCase("Confirm")) {
            request.setDelivery(user);
            
//      request.setProvider(userAccount)

//            if(String.valueOf(deliveryOptionComboBox.getSelectedItem()).equalsIgnoreCase("Confirm")){
                System.out.println("I am here   "+String.valueOf(deliveryComboBox.getSelectedItem()));
            request.setCurrentStatus("on the way");
//            }
        }
            else {
                request.setCurrentStatus("Pickup");
            }
//           System.out.println((String)(currentStatusComboBox1.getSelectedItem()));
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof DeliveryOrganization) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request);
                user.getWorkQueue().getWorkRequestList().add(request);
            }
        
        request.setProviderAddress(enterprise.getEnterpriseAddress());
        JOptionPane.showMessageDialog(null, "Submited");
      }catch(Exception e){
      
      }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        try{
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        NGOFoodDistributionWorkAreaJPanel manageWork = (NGOFoodDistributionWorkAreaJPanel) component;
        manageWork.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
            }
        catch(Exception e){
          JOptionPane.showMessageDialog(null,"Invalid Opration");
        }
    }//GEN-LAST:event_backBtnActionPerformed

    private void decisionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decisionComboBoxActionPerformed
        // TODO add your handling code here:
        if (decisionComboBox.getSelectedItem().toString().equalsIgnoreCase("Reject")) {
            deliveryComboBox.setEnabled(false);
            assignComboBox.setEnabled(false);
            submitBtn.setEnabled(false);
        } else {
            deliveryComboBox.setEnabled(true);
            assignComboBox.setEnabled(true);
            submitBtn.setEnabled(true);

        }
    }//GEN-LAST:event_decisionComboBoxActionPerformed

    private void deliveryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deliveryComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> assignComboBox;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> decisionComboBox;
    private javax.swing.JComboBox<String> deliveryComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
