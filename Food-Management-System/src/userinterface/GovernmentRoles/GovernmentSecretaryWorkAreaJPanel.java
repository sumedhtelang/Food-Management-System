/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.GovernmentRoles;

import Business.Enterprise.Enterprise;
import Business.Organization.GovernmentSecretaryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RequestGovernmentRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sumedhtelang
 */
public class GovernmentSecretaryWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GovernmentSecretaryWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private GovernmentSecretaryOrganization governmentSecretaryOrganization;
    private Enterprise enterprise;


    public GovernmentSecretaryWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.governmentSecretaryOrganization = (GovernmentSecretaryOrganization) organization;
        
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblProcess.getModel();

        model.setRowCount(0);

        for (WorkRequest request : governmentSecretaryOrganization.getWorkQueue().getWorkRequestList()) {
            String status = request.getCurrentStatus();
            Object[] row = new Object[6];
            row[0] = ((RequestGovernmentRequest) request);
            row[1] = request.getProvider().getEmployee().getName();
            if (status.equalsIgnoreCase("Sent to Treasurer") || status.equalsIgnoreCase("Sent to Secretary")) {
                row[2] = null;
            } else {
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            }
            row[3] = status;
            row[4] = ((RequestGovernmentRequest) request).getRequestAmount();
            row[5] = ((RequestGovernmentRequest) request).getMessage();

            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProcess = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        tblProcess.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Location", "Sender", "Receiver", "Status", "Funds", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProcess);
        if (tblProcess.getColumnModel().getColumnCount() > 0) {
            tblProcess.getColumnModel().getColumn(0).setResizable(false);
            tblProcess.getColumnModel().getColumn(1).setResizable(false);
            tblProcess.getColumnModel().getColumn(2).setResizable(false);
            tblProcess.getColumnModel().getColumn(3).setResizable(false);
            tblProcess.getColumnModel().getColumn(4).setResizable(false);
            tblProcess.getColumnModel().getColumn(5).setResizable(false);
        }

        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        processBtn.setText("Process Request");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(assignBtn)
                        .addGap(191, 191, 191)
                        .addComponent(processBtn)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignBtn)
                    .addComponent(processBtn))
                .addContainerGap(151, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProcess.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first from the table to view details", "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            WorkRequest request = (RequestGovernmentRequest) tblProcess.getValueAt(selectedRow, 0);
            if (request.getCurrentStatus().equals("Sent to Secretary")) {
                request.setReceiver(userAccount);
                request.setCurrentStatus("Pending");
                populateTable();
            } else {
                JOptionPane.showMessageDialog(null, "Can't assign this work request, as the work request is in " + request.getCurrentStatus() + " status");
            }
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProcess.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first from the table to view details", "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            RequestGovernmentRequest governmentRequest = (RequestGovernmentRequest) tblProcess.getValueAt(selectedRow, 0);
            if (governmentRequest.getCurrentStatus().equalsIgnoreCase("Sent to Secretary")) {
                JOptionPane.showMessageDialog(null, "Please assign selected request first");
                return;
            }
            if (governmentRequest.getCurrentStatus().equalsIgnoreCase("Sent to Treasurer")) {
                JOptionPane.showMessageDialog(null, "Request already processed");
                return;
            }
            if(!userAccount.equals(governmentRequest.getReceiver())){
             JOptionPane.showMessageDialog(null, "Not Authorized");
                return;
            }
            if (!userAccount.getEmployee().equals(governmentRequest.getReceiver().getEmployee())) {
                JOptionPane.showMessageDialog(null, "Request assigned to other Officer", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (governmentRequest.getCurrentStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Cannot process a Rejected Request", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            SecretaryRequestJPanel panel = new SecretaryRequestJPanel(userProcessContainer, userAccount, governmentRequest, enterprise);
            userProcessContainer.add("secretaryProcessWorkRequestJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

        }
    }//GEN-LAST:event_processBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processBtn;
    private javax.swing.JTable tblProcess;
    // End of variables declaration//GEN-END:variables
}
